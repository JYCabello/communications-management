name: Build and deploy ASP.Net Core app to Azure Web App - clubcommunications

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Pull event store image
        run: docker pull eventstore/eventstore:latest
      
      - name: Disable test parallelism
        uses: microsoft/variable-substitution@v1
        with:
          files: '**/xunit.runner.json'
        env:
          parallelizeAssembly: "false"
          parallelizeTestCollections: "false"

      - name: Test
        run: dotnet test ./src/CommunicationsManagement/CommunicationsManagement.sln

      - name: Build
        run: dotnet build ./src/CommunicationsManagement/CommunicationsManagement.API/CommunicationsManagement.API.fsproj --configuration Release 

      - name: Publish
        if: github.ref == 'refs/heads/main'
        run: dotnet publish ./src/CommunicationsManagement/CommunicationsManagement.API/CommunicationsManagement.API.fsproj -c Release -o ${{env.DOTNET_ROOT}}/app
      
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        if: github.ref == 'refs/heads/main'
        with:
          files: '${{env.DOTNET_ROOT}}/app/appsettings.json'
        env:
          EventStoreConnectionString: ${{ secrets.EVENTSTORECONNECTIONSTRING }}
          BaseUrl: ${{ secrets.BASEURL }}
          AdminEmail: ${{ secrets.ADMINEMAIL }}
          SendGridKey: ${{ secrets.SENDGRIDKEY }}
          MailFrom: ${{ secrets.MAILFROM }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/main'
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/app

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'clubcommunications'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7064534EB5B74D738C7CAD54DE9407BD }}
          package: .
